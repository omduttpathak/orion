stages:
- name: build
  steps:
  - publishImageConfig:
      dockerfilePath: ./Dockerfile
      buildContext: .
      tag: IMG_fiware-orion_v2.2.0:${CICD_EXECUTION_SEQUENCE}
      pushRemote: true
      registry: 192.168.100.176
    env:
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_STORAGE_PATH: /var/lib/docker2
    when:
      branch: {}
      event: {}
  - publishImageConfig:
      dockerfilePath: ./Dockerfile
      buildContext: .
      tag: orion-devoperation
      pushRemote: true
      registry: 192.168.100.176:5000
    env:
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_STORAGE_PATH: /var/lib/docker2
    when:
      branch: {}
      event: {}
- name: deploy
  steps:
  - applyYamlConfig:
      path: ./deployment.yaml
  - applyYamlConfig:
      path: service.yaml
  - runScriptConfig:
      image: python:latest
      shellScript: |-
        apt-get update
        apt-get install sshpass
        sshpass -p password ssh -tt -o StrictHostKeyChecking=no newuser@192.168.100.178 ./check_pod_status.sh p-kpggk-pipeline orion
  when:
    event: {}
- name: test
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: |
        apt-get update
        echo Y | apt-get install npm
        npm -v
        npm install -g newman
        newman run http://192.168.100.178/csp_containerizationandautomation/orion/raw/master/Context_State_in_Orion.postman_collection.json
  when:
    branch: {}
    event: {}
timeout: 60
notification: {}
